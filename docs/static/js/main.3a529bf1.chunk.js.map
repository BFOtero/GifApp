{"version":3,"sources":["components/AddCategory.js","Hooks/useFechGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","useFechGifs","category","data","loading","datos","setDatos","useEffect","a","url","encodeURI","fetch","res","json","getGif","GifGridItem","id","title","images","className","src","downsized_medium","alt","GifGrid","console","log","map","image","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"qLAmCeA,EAhCK,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EACJC,mBAAS,IADL,mBACjCC,EADiC,KACrBC,EADqB,KAgBxC,OACI,uBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,UACI,mCAAMD,EAAN,OACA,uBACIQ,KAAM,OACNC,MAAOT,EACPU,SAnBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,c,+BCiBhBG,EAtBK,SAACC,GAAc,IAAD,EACJd,mBAAS,CAC/Be,KAAK,GACLC,SAAS,IAHiB,mBACvBC,EADuB,KAChBC,EADgB,KAmB9B,OAbAC,qBAAU,YACM,uCAAG,kCAAAC,EAAA,6DACLC,EADK,iDAC2CC,UAAUR,GADrD,+DAEOS,MAAMF,GAFb,cAELG,EAFK,gBAGUA,EAAIC,OAHd,gBAGJV,EAHI,EAGJA,KACPG,EAAS,CACLH,KAAMA,EACNC,SAAS,IANF,2CAAH,qDASZU,KACD,CAACZ,IAEGG,GCRIU,EAXK,SAAC,GAAwB,EAAvBC,GAAwB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,OAC7B,OACI,sBAAKC,UAAU,8CAAf,UACI,qBAAKC,IAAG,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAQG,iBAAiBZ,IAAMa,IAAKL,IAC9C,4BACKA,QCoBFM,EAvBC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,EAECD,EAAaC,GAAhCgB,EAFkB,EAEvBf,KAAaC,EAFU,EAEVA,QAGpB,OADAoB,QAAQC,IAAIP,GAER,qCACI,mCAAOhB,KACNE,GAAW,wCACZ,qBAAKe,UAAU,YAAf,SAEQD,EAAOQ,KAAK,SAAAC,GAAK,OACb,cAAC,EAAD,eAEQA,GADCA,EAAMX,aCQxBY,EArBM,WAAO,IAAD,EAEaxC,mBAAU,CAAC,cAFxB,mBAEhByC,EAFgB,KAEJ1C,EAFI,KAIvB,OACI,gCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BACM0C,EAAWH,KAAK,SAACI,GAAD,OACd,cAAC,EAAD,CAEA5B,SAAa4B,GADNA,Y,MCX3BC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3a529bf1.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ( { setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) { \r\n            setCategories( cats => [ inputValue, ...cats ]);\r\n            setInputValue(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <h1> {inputValue} </h1>\r\n            <input\r\n                type= \"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputValue }\r\n            /> \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","import { useEffect, useState } from \"react\"\r\n\r\nconst useFechGifs = (category) => {\r\n    const [datos, setDatos] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n  \r\n    useEffect(() => {\r\n        const getGif = async() => {\r\n            const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=9kxJDttM8RmMG0yxaRFrW9XHn2MaOE4Y`\r\n            const res = await fetch(url);\r\n            const {data} = await res.json();\r\n            setDatos({\r\n                data: data,\r\n                loading: false\r\n            })\r\n        }\r\n        getGif()\r\n    }, [category])\r\n\r\n    return datos;\r\n}\r\n\r\nexport default useFechGifs\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, images}) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeInDown '>\r\n            <img src={images?.downsized_medium.url}  alt={title} /> \r\n            <p>\r\n                {title}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport useFechGifs from '../Hooks/useFechGifs'\r\n import GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFechGifs( category );\r\n\r\n    console.log(images)\r\n    return (\r\n        <>  \r\n            <h3> { category }</h3> \r\n            {loading && <p>loading</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( image => (\r\n                        <GifGridItem \r\n                            key={image.id}\r\n                            {...image}\r\n                        />\r\n                    ))\r\n                }   \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, {useState} from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState( ['One Piece'])\r\n\r\n    return (\r\n        <div>\r\n            <h2> GifExpertApp </h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n            <ol>\r\n                { categories.map( (cat) => \r\n                    <GifGrid \r\n                    key = {cat }\r\n                    category = { cat }\r\n                    />\r\n                )}\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <>\n    <GifExpertApp />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}